<?xml version="1.0" encoding="utf-8"?>
<ClassDiagram MajorVersion="1" MinorVersion="1">
  <Class Name="TigerNET.AST.AccessNode" Collapsed="true">
    <Position X="6" Y="1.75" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>AccessNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.AliasDeclarationNode" Collapsed="true">
    <Position X="75.75" Y="4.75" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAIAAAAAAAAAAEAAAAAAAAAAABAAAA=</HashCode>
      <FileName>AliasDeclarationNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.AndOperatorNode" Collapsed="true">
    <Position X="42" Y="7.5" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAIAAAAAAAAAAEAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>AndOperatorNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.ArithmeticalBinaryOperatorNode" Collapsed="true">
    <Position X="22.75" Y="6.25" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>ArithmeticalBinaryOperatorNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.ArrayAccessNode" Collapsed="true">
    <Position X="8.25" Y="3.25" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAIAAAAAAAAAAEAAAAACAEAAAAAAAA=</HashCode>
      <FileName>ArrayAccessNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.ArrayDeclarationNode" Collapsed="true">
    <Position X="80.25" Y="4.75" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAIAAAAAAAAAAEAABAAAAAAAAAAAAA=</HashCode>
      <FileName>ArrayDeclarationNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.ArrayLiteralNode" Collapsed="true">
    <Position X="62.25" Y="4.75" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAICAAAAAQAAAEAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>ArrayLiteralNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.AssignmentBaseNode" Collapsed="true">
    <Position X="67.75" Y="1.75" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>AssignmentBaseNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.AssignmentNode" Collapsed="true">
    <Position X="66.75" Y="3.25" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAIAAAAAAAAAAEAAAAACAAAAAAAAAA=</HashCode>
      <FileName>AssignmentNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.AtomicLiteralNode" Collapsed="true">
    <Position X="56.5" Y="3.25" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>AtomicLiteralNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.BinaryOperatorNode" Collapsed="true">
    <Position X="31.75" Y="4.75" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACACAAAAAAAA=</HashCode>
      <FileName>BinaryOperatorNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.BreakNode" Collapsed="true">
    <Position X="10.5" Y="3.25" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAIAAAAAAAAAAEAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>BreakNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.CallableDeclarationNode" Collapsed="true">
    <Position X="73.5" Y="3.25" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAIAAABAAAAAAEAAAAAAQAAAAAAgAA=</HashCode>
      <FileName>CallableDeclarationNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.CallableNode" Collapsed="true">
    <Position X="15" Y="3.25" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAIAAAAAAQAAAEAAAAAAIAAAAAAAAA=</HashCode>
      <FileName>CallableNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.ControlNode" Collapsed="true">
    <Position X="48.75" Y="3.25" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>ControlNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.DeclarationNode" Collapsed="true">
    <Position X="75.75" Y="1.75" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>DeclarationNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.DivOperatorNode" Collapsed="true">
    <Position X="19.5" Y="7.5" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAIAAAAAAAAAAEAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>DivOperatorNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.EqualOperatorNode" Collapsed="true">
    <Position X="28.5" Y="7.5" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAIAAAAAAAAAAEAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>EqualOperatorNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.ExpressionNode" Collapsed="true">
    <Position X="42" Y="0.5" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAABAAAAAAAAIAABAAAAAAAEAAAAAAAAAAAAFAAA=</HashCode>
      <FileName>ExpressionNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.ExpressionSequenceNode" Collapsed="true">
    <Position X="53.25" Y="1.75" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAIAAAAAAAAAAEAAAAAAAAAAAEAAAA=</HashCode>
      <FileName>ExpressionSequenceNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.FieldAssignmentNode" Collapsed="true">
    <Position X="69" Y="3.25" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAIAAAAAAAAAAGAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>FieldAssignmentNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.ForToDoNode" Collapsed="true">
    <Position X="51" Y="4.75" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAgAAIAAEBAAAAAAEAAAAAAAAAAAAAAAI=</HashCode>
      <FileName>ForToDoNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.GreatherEqualOperatorNode" Collapsed="true">
    <Position X="33" Y="7.5" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAIAAAAAAAAAAEAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>GreatherEqualOperatorNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.GreatherOperatorNode" Collapsed="true">
    <Position X="37.5" Y="7.5" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAIAAAAAAAAAAEAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>GreatherOperatorNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.IfThenElseNode" Collapsed="true">
    <Position X="46.5" Y="4.75" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAACAAAAIAAAAAAAAAAEAAAAAIAIAAAAAAAA=</HashCode>
      <FileName>IfThenElseNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.InstructionNode" Collapsed="true">
    <Position X="30.75" Y="1.75" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>InstructionNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.IntegerLiteralNode" Collapsed="true">
    <Position X="55.5" Y="4.75" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAIAAAAAAAAAAEAAAAAAAAgAAAAAAA=</HashCode>
      <FileName>IntegerLiteralNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.LetInEndNode" Collapsed="true">
    <Position X="12.75" Y="3.25" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAQAAAAAAIAAAAAAAAAAEAAAAAAAAAAgAAAAA=</HashCode>
      <FileName>LetInEndNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.LiteralNode" Collapsed="true">
    <Position X="60" Y="1.75" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>LiteralNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.LogicalBinaryOperatorNode" Collapsed="true">
    <Position X="43" Y="6.25" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>LogicalBinaryOperatorNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.LowerEqualOperatorNode" Collapsed="true">
    <Position X="35.25" Y="7.5" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAIAAAAAAAAAAEAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>LowerEqualOperatorNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.LowerOperatorNode" Collapsed="true">
    <Position X="39.75" Y="7.5" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAIAAAAAAAAAAEAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>LowerOperatorNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.MinusOperatorNode" Collapsed="true">
    <Position X="21.75" Y="7.5" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAIAAAAAAAAAAEAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>MinusOperatorNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.MinusUnaryOperatorNode" Collapsed="true">
    <Position X="17.25" Y="6.25" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAIAAAAAAAAAAEAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>MinusUnaryOperatorNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.NilLiteralNode" Collapsed="true">
    <Position X="57.75" Y="4.75" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAIAAAAAAAAAAEAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>NilLiteralNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.NonAtomicLiteralNode" Collapsed="true">
    <Position X="61" Y="3.25" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>NonAtomicLiteralNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.NotEqualOperatorNode" Collapsed="true">
    <Position X="30.75" Y="7.5" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAIAAAAAAAAAAEAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>NotEqualOperatorNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.OperatorNode" Collapsed="true">
    <Position X="30.75" Y="3.25" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>OperatorNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.OrOperatorNode" Collapsed="true">
    <Position X="44.25" Y="7.5" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAIAAAAAAAAAAEAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>OrOperatorNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.PlusOperatorNode" Collapsed="true">
    <Position X="26.25" Y="7.5" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAIAAAAAAAAAAEAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>PlusOperatorNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.ProdOperatorNode" Collapsed="true">
    <Position X="24" Y="7.5" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAIAAAAAAAAAAEAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>ProdOperatorNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.RecordAccessNode" Collapsed="true">
    <Position X="3.75" Y="3.25" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAIAAAAAAAAAAGAAAAACAAAAAAAAAA=</HashCode>
      <FileName>RecordAccessNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.RecordDeclarationNode" Collapsed="true">
    <Position X="78" Y="4.75" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAIAAAAAAAAAAEAAAAAAAAAAAAAgAA=</HashCode>
      <FileName>RecordDeclarationNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.RecordLiteralNode" Collapsed="true">
    <Position X="60" Y="4.75" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAIAAAAAAAAAAEAAAAAAAAAAAAAgAA=</HashCode>
      <FileName>RecordLiteralNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.RelationalBinaryOperatorNode" Collapsed="true">
    <Position X="34" Y="6.25" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>RelationalBinaryOperatorNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.StringLiteralNode" Collapsed="true">
    <Position X="64.5" Y="3.25" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAIAAAAAAAAAAEAAAAAAAAgAAAAAAA=</HashCode>
      <FileName>StringLiteralNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.TypeDeclarationNode" Collapsed="true">
    <Position X="78" Y="3.25" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAA=</HashCode>
      <FileName>TypeDeclarationNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.UnaryOperatorNode" Collapsed="true">
    <Position X="17.25" Y="4.75" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>UnaryOperatorNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.VariableAccessNode" Collapsed="true">
    <Position X="6" Y="3.25" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAIAAAAAAQAAAEAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>VariableAccessNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.VariableDeclarationNode" Collapsed="true">
    <Position X="71.25" Y="3.25" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAIAAABAAAAAAEAAAAAAQAAAAAAAAA=</HashCode>
      <FileName>VariableDeclarationNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.WhileNode" Collapsed="true">
    <Position X="48.75" Y="4.75" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAACAAAAIAAABAAAAAAEAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>WhileNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="TigerNET.AST.TypeField" Collapsed="true">
    <Position X="82.75" Y="0.5" Width="1.5" />
    <TypeIdentifier />
  </Class>
  <Font Name="Segoe UI" Size="9" />
</ClassDiagram>